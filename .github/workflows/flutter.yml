name: roadsidepros

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Essential Utilities
        run: |
          apt-get update
          apt-get install -y coreutils build-essential curl unzip

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            android/.gradle
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Clean Flutter Build
        run: flutter clean

      - name: Update Kotlin Version
        run: sed -i 's/ext.kotlin_version = ".*"/ext.kotlin_version = "2.1.0"/' android/build.gradle

      - name: Ensure Gradle Wrapper 8.9
        run: sed -i 's#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.9-all.zip#' android/gradle/wrapper/gradle-wrapper.properties

      - name: Install Android Command-Line Tools and NDK (with mkdir fallback)
        shell: bash
        run: |
          if ! command -v mkdir >/dev/null 2>&1; then
            echo "'mkdir' not found. Installing coreutils..."
            apt-get install -y coreutils
          fi
          if ! mkdir -p $HOME/android-sdk/cmdline-tools/latest; then
            echo "mkdir failed, attempting fallback with install -d..."
            if ! command -v install >/dev/null 2>&1; then
              echo "'install' not found. Installing build-essential..."
              apt-get install -y build-essential
            fi
            install -d $HOME/android-sdk/cmdline-tools/latest
          fi
          if ! command -v curl >/dev/null 2>&1; then
            echo "'curl' not found. Installing curl..."
            apt-get install -y curl
          fi
          if ! command -v unzip >/dev/null 2>&1; then
            echo "'unzip' not found. Installing unzip..."
            apt-get install -y unzip
          fi
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          unzip -qq commandlinetools.zip -d $HOME/android-sdk/cmdline-tools/latest
          rm commandlinetools.zip
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "ndk-bundle"
        env:
          ANDROID_HOME: $HOME/android-sdk
          PATH: $HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH

      - name: Set Android NDK Path
        run: echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> android/local.properties
        env:
          ANDROID_HOME: $HOME/android-sdk

      - name: Debug Android SDK and NDK
        run: |
          ls $ANDROID_HOME/ndk || echo "NDK directory missing"
          ls /usr/local/lib/android/ndk || echo "NDK directory missing"
        env:
          ANDROID_HOME: $HOME/android-sdk

      - name: Build APK
        run: flutter build apk --release -v

      - name: Debug Build Directory
        run: ls -R build/app/outputs/

      - name: Rename APK
        if: success()
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/Roadside_Pros.apk

      - name: Upload APK
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Roadside_Pros.apk
          path: build/app/outputs/flutter-apk/Roadside_Pros.apk